book_path: /cirq/_book.yaml
project_path: /cirq/_project.yaml
title: Tutorials
landing_page:
  nav: left
  rows:
    - heading: Tutorials and examples
      description: Cirq comes with a collection of example implementations of beginner, intermediate, and advanced quantum algorithms that demonstrate the main features of the library.
    - heading: Beginner
      description: Explore Cirq through introductory quantum information examples.
      items:
      - heading: Basics
        description: Learn the basics of Cirq.
        path: /cirq/tutorials/basics
        icon:
          name: menu_book

    - heading: Intermediate
      description: Use Cirq for intermediate-level subroutines and algorithms.
      items:
      - heading: Quantum Variational Algorithm
        description: Use the variational quantum eigensolver to find the ground state of the Ising model.
        path: /cirq/tutorials/variational_algorithm
        icon:
          name: menu_book
      - heading: Approximate Optimization
        description: Use a quantum computer to find approximately optimal cuts in a graph.
        path: /cirq/tutorials/qaoa
        icon:
          name: menu_book
      - heading: Quantum Walks
        description: Demonstration of classical and quantum random walks on a graph.
        path: /cirq/tutorials/quantum_walks
        icon:
          name: menu_book


    - heading: Advanced
      description: Utilize Cirq features to implement advanced quantum algorithms.
      items:
      - heading: Hidden Linear Function
        description: Find a hidden vector with a constant depth quantum circuit.
        path: /cirq/tutorials/hidden_linear_function
        icon:
          name: menu_book
      - heading: Rabi Oscillation
        description: Example of using sweeps and symbols to show rotation of a qubit by different angles.
        path: /cirq/tutorials/rabi_oscillations
        icon:
          name: menu_book
      - heading: Shor's Algorithm
        description: Factor numbers using a quantum computer.
        path: /cirq/tutorials/shor
        icon:
          name: menu_book

    - heading: GitHub
      description: See more examples on the <a href="https://github.com/quantumlib/Cirq/tree/master/examples">Cirq GitHub</a>.

    - heading: Beginner
      items:
      - heading: Hello Qubit
        description: Simple first program showing how to create a quantum circuit.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/hello_qubit.py
        icon:
          name: code

      - heading: Deutsch's Algorithm
        description: Textbook example of the simplest quantum advantage.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/deutsch.py
        icon:
          name: code
      - heading: Bernstein-Vazirani Algorithm
        description: Textbook algorithm determining a global property of a function with surprisingly few calls to it.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/bernstein_vazirani.py
        icon:
          name: code

      - heading: Bell Inequality
        description: Demonstration of a Bell inequality which shows impossibility of local hidden variable theories.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/bell_inequality.py
        icon:
          name: code
      - heading: BB84
        description: Textbook algorithm for Quantum Key Distribution.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/bb84.py
        icon:
          name: code
      - heading: Noisy Simulation
        description: How to use a noisy simulator to execute quantum circuits.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/noisy_simulation_example.py
        icon:
          name: code

      - heading: Qubit Placement
        description: How to find a line of adjacent qubits on a device.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/place_on_bristlecone.py
        icon:
          name: code
      - heading: Quantum Teleportation
        description: A demonstration of using 2 classical bits to transport a quantum state from one
          qubit to another.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/quantum_teleportation.py
        icon:
          name: code
      - heading: Superdense Coding
        description: Transmit 2 classical bits using one quantum bit.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/superdense_coding.py
        icon:
          name: code

    - heading: Intermediate
      items:
      - heading: Arithmetic
        description: Algorithms for adding and multiplying numbers represented by quantum states.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/basic_arithmetic.py
        icon:
          name: code
      - heading: Grover's Algorithm
        description: Use a quantum computer to find a needle in a haystack.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/grover.py
        icon:
          name: code

      - heading: Shor's Code
        description: Quantum error correction with Shor's nine-qubit code.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/shors_code.py
        icon:
          name: code
      - heading: Quantum Fourier Transform
        description: Change from the computational basis to the frequency basis and vice versa.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/quantum_fourier_transform.py
        icon:
          name: code
      - heading: Phase Estimation
        description: Find the eigenvalues of a unitary operator.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/phase_estimator.py
        icon:
          name: code
      - heading: Swap Networks
        description: Algorithm for efficiently emulating full connectivity on a limited connectivity grid of qubits.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/swap_networks.py
        icon:
          name: code

    - heading: Advanced
      items:
      - heading: Direct Fidelity
        description: Direct fidelity estimation to distinguish a desired state fromt he actual state using few Pauli measurements.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/direct_fidelity_estimation.py
        icon:
          name: code
      - heading: XEB
        description: Fidelity estimation using cross-entropy benchmarking (XEB).
        path: https://github.com/quantumlib/Cirq/blob/master/examples/cross_entropy_benchmarking_example.py
        icon:
          name: code
      - heading: HHL
        description: Algorithm for solving linear systems using quantum phase estimation.
        path: https://github.com/quantumlib/Cirq/blob/master/examples/hhl.py
        icon:
          name: code
